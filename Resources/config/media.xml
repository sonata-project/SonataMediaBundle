<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="sonata.media.resizer.simple.class">Sonata\MediaBundle\Media\SimpleResizer</parameter>
        <parameter key="sonata.media.resizer.simple.adapter.mode">inset</parameter>
    </parameters>

    <services>
        <!-- image manipulation service -->
        <service id="sonata.media.adapter.image.gd" class="Imagine\Gd\Imagine" />
        <service id="sonata.media.adapter.image.imagick" class="Imagine\Imagick\Imagine" />
        <service id="sonata.media.adapter.image.gmagick" class="Imagine\Gmagick\Imagine" />

        <service id="sonata.media.resizer.simple" class="%sonata.media.resizer.simple.class%">
            <argument type="service" id="sonata.media.adapter.image.gd" />
            <argument>%sonata.media.resizer.simple.adapter.mode%</argument>
        </service>

        <!-- filesystem abstraction service -->
        <service id="sonata.media.adapter.filesystem.local" class="Gaufrette\Adapter\Local" />
        <service id="sonata.media.adapter.filesystem.ftp"   class="Gaufrette\Adapter\Ftp" />
        <service id="sonata.media.adapter.service.s3"       class="Zend\Service\Amazon\S3\S3" >
            <argument />
            <argument />
            <argument />
        </service>
        <service id="sonata.media.adapter.filesystem.s3"    class="Gaufrette\Adapter\AmazonS3" >
            <argument />
            <argument />
            <argument />
        </service>

        <service id="sonata.media.adapter.filesystem.replicate"  class="Sonata\MediaBundle\Replicate" >
            <argument />
            <argument />
        </service>


        <service id="sonata.media.filesystem.ftp" class="Gaufrette\Filesystem" >
            <argument type="service" id="sonata.media.adapter.filesystem.ftp" />
        </service>

        <service id="sonata.media.filesystem.local" class="Gaufrette\Filesystem">
            <argument type="service" id="sonata.media.adapter.filesystem.local" />
        </service>

        <service id="sonata.media.filesystem.s3" class="Gaufrette\Filesystem">
            <argument type="service" id="sonata.media.adapter.filesystem.s3" />
        </service>

        <service id="sonata.media.filesystem.replicate" class="Gaufrette\Filesystem">
            <argument type="service" id="sonata.media.adapter.filesystem.replicate" />
        </service>

        <!-- Path generator servive -->
        <service id="sonata.media.generator.default" class="Sonata\MediaBundle\Generator\DefaultGenerator">

        </service>

        <!-- CDN abstraction service -->
        <service id="sonata.media.cdn.server" class="Sonata\MediaBundle\CDN\Server">
            <argument />
        </service>

        <service id="sonata.media.cdn.panther" class="Sonata\MediaBundle\CDN\PantherPortal">
            <argument />
            <argument />
            <argument />
            <argument />
        </service>

        <service id="sonata.media.cdn.fallback" class="Sonata\MediaBundle\CDN\Fallback">
            <argument />
            <argument />
        </service>
    </services>

</container>